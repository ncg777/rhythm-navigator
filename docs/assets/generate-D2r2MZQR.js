(function(){"use strict";function P(t){return t==="binary"?1:t==="octal"?3:4}function M(t,e,n){if(t.length<2)return"";const o=[];if(n.circular){const s=t.length,c=e;for(let l=0;l<s;l++){const h=t[l],g=(t[(l+1)%s]-h+c)%c||c;o.push(g)}}else{for(let s=0;s<t.length-1;s++)o.push(t[s+1]-t[s]);if(o.length<3)return""}const i=O(o,n.circular),r=[i];if(n.rotationInvariant&&r.push(...b(i)),n.reflectionInvariant){const s=w(i);r.push(s,...b(s))}return A(r)}function R(t,e,n){if(t.length<2)return"";const o=[];{const l=t.length,h=e;for(let u=0;u<l;u++){const g=t[u],I=(t[(u+1)%l]-g+h)%h||h;o.push(I)}}const i=o.length,r=new Array(i);for(let l=0;l<i;l++){const h=o[(l-1+i)%i],u=o[l];r[l]=h+u}const s=O(r,n.circular),c=[s];c.push(...b(s));{const l=w(s);c.push(l,...b(l))}return A(c)}function O(t,e){const n=[],o=t.length,i=e?o:o-1;for(let r=0;r<i;r++){const s=t[r],c=t[(r+1)%o];n.push(c===s?"S":c>s?"U":"D")}return n.join("")}function b(t){const e=[];for(let n=1;n<t.length;n++)e.push(t.slice(n)+t.slice(0,n));return e}function w(t){const e=n=>n==="U"?"D":n==="D"?"U":"S";return t.split("").reverse().map(e).join("")}function A(t){let e=t[0];for(const n of t)n<e&&(e=n);return e}function x(t,e){if(t.length<2)return[];const n=[],o=t.length;for(let i=0;i<o;i++){const r=t[i],c=(t[(i+1)%o]-r+e)%e||e;n.push(c)}return n}function j(t,e){if(t.length===0)return!1;if(t.length===1)return!0;const n=t.length,o=x(t,e),i=Math.floor(e/n),r=Math.ceil(e/n),s=e%n;let c=0,l=0;for(const h of o)if(h===i)c++;else if(h===r)l++;else return!1;return l===s&&c===n-s}function E(t,e){if(e%2!==0)return!0;const n=e/2,o=t.length;if(o===0)return!0;const i=t.concat(t);for(let r=0;r<o;r++){let s=0;for(let c=1;c<o;c++){if(s+=i[r+c-1],s===n)return!1;if(s>n)break}}return!0}function F(t,e){if(t.length<2||e%2!==0)return!1;const n=x(t,e);for(const o of n)if(o!==2&&o!==3)return!1;return E(n,e)}function U(t,e){if(t.length<2||e%2!==0)return!1;const n=x(t,e);for(const o of n)if(o%2===0)return!1;return E(n,e)}function V(t,e){if(e%2!==0)return!0;const n=e/2,o=new Set(t);for(const i of t){const r=(i+n)%e;if(o.has(r))return!1}return!0}let C=!1;self.onmessage=t=>{const e=t.data;if(e.type==="stop"){C=!0;return}e.type==="start"&&(C=!1,N(e.payload).catch(()=>{}))};function B(t){const e=1<<t,n=new Array(e);for(let o=0;o<e;o++){const i=[];for(let r=0;r<t;r++)o>>t-1-r&1&&i.push(r);n[o]=i}return n}async function N(t){const e=t.mode==="binary"?2:t.mode==="octal"?8:16,n=P(t.mode),o=t.numerator*t.denominator,i=o*n,r=B(n),s=new Array(o).fill(0),c=t.maxReps<=0?Number.POSITIVE_INFINITY:Math.max(1,t.maxReps),l=200,h=2e3;let u=0,g=0,v=[],I=!1;const D=()=>{v.length&&(self.postMessage({type:"batch",items:v}),v=[])};for(;!I&&!C&&u<c;){if(!t.excludeTrivial||!(T(s,0)||T(s,e-1))){const a=[];for(let f=0;f<o;f++){const d=s[f],p=r[d];if(p.length){const S=f*n;for(let k=0;k<p.length;k++)a.push(S+p[k])}}const m=a.length;if(m>=t.minOnsets&&m<=t.maxOnsets){let f=!0;if(t.onlyIsomorphic)if(a.length<2)f=!0;else{const d={circular:!0,rotationInvariant:!0,reflectionInvariant:!0},p=M(a,i,d),S=R(a,i,d);f=p.length>0&&p===S}if(f&&t.onlyMaximallyEven&&(f=j(a,i)),f&&t.oddityType!=="off")switch(t.oddityType){case"rop23":f=F(a,i);break;case"odd-intervals":f=U(a,i);break;case"no-antipodes":f=V(a,i);break}if(f){const d=_(s,t.mode,t.denominator);v.push({id:`${t.mode}:${d}:${u}`,base:t.mode,groupedDigitsString:d,onsets:m,canonicalContour:M(a,i,{circular:t.circular,rotationInvariant:t.rotationInvariant,reflectionInvariant:t.reflectionInvariant})}),u++}}}g++,g%l===0&&D(),g%h===0&&(self.postMessage({type:"progress",processed:g,emitted:u}),await $());let y=1;for(let a=o-1;a>=0&&y;a--){const m=s[a]+y;m>=e?(s[a]=0,y=1):(s[a]=m,y=0)}y&&(I=!0)}D(),self.postMessage({type:"progress",processed:g,emitted:u}),self.postMessage({type:"done"})}function _(t,e,n){const o=r=>e==="hex"?r.toString(16).toUpperCase():String(r),i=[];for(let r=0;r<t.length;r+=n)i.push(t.slice(r,r+n).map(o).join(""));return i.join(" ")}function T(t,e){for(let n=0;n<t.length;n++)if(t[n]!==e)return!1;return!0}function $(){return new Promise(t=>setTimeout(t,0))}})();
